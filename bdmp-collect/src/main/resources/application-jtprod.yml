server:
  port: 60005

spring:
  application:
    name: bdmp-collect
  servlet:
    multipart:
      max-file-size: 2048MB
      max-request-size: 2048MB
      enabled: true
  cloud:
    nacos:
      discovery:
        server-addr: http://100.65.20.39:8848
  datasource:
    multiple-datasource:
    - name: default
      driverClassName: org.gjt.mm.mysql.Driver
      url: jdbc:mysql://100.65.20.2:3306/basedata?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false&autoReconnect=true&failOverReadOnly=false
      username: root
      password: rhyDB@2022@pingchas0418!!qwe
      # 初始连接数
      hikari:
        initial-size: 5
        # 最小连接数
        min-idle: 10
        # 最大连接数
        max-active: 50
    - name: jdxt
      driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
      url: jdbc:sqlserver://59.173.239.196:3433;DatabaseName=JT_EMS_Bak
      username: base_user
      password: base123456*
      # 初始连接数
      hikari:
      initial-size: 5
      # 最小连接数
      min-idle: 10
      # 最大连接数
      max-active: 50
  kafka:
    bootstrap-servers: 100.65.20.43:9092
    producer:
      # 发生错误后，消息重发的次数。
      retries: 0
      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 16384
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 1
    consumer:
      group-id: bdmp-collect-jtprod
      # 自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
      auto-commit-interval: 2S
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: latest
      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
      enable-auto-commit: false
      # 键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 3
      #listner负责ack，每调用一次，就立即commit
      ack-mode: manual_immediate
      missing-topics-fatal: false

# mybatis-plus配置
mybatis-plus:
  mapper-locations: classpath:mapper/**/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.rhy.bdmp.collect.modules.*.domain.po
  global-config:
    db-config:
      #主键类型  0:"数据库ID自增",1:"无主键设置",2:"用户输入ID",3:"全局唯一ID (数字类型唯一ID)", 4:"全局唯一ID UUID";
      id-type: ASSIGN_ID
      #是否开启大写命名，默认不开启
      capital-mode: true
      #逻辑删除配置
      logic-delete-value: 0
      logic-not-delete-value: 1
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

custom:
  video:
    tenglu:
      clientId: video
      key: c349d0aa41e2b94ad20ef4fe24ed39e0
      platformAddress: http://100.65.20.4:8908/
    yuntai:
      platformAddress: http://100.65.20.5:5000/
      username: hbjt
      password: HBjtkj1410
      mac: 400142D4265D4DB296CE3AEB03F08B61
      login: ydjk/app/user/login
      listPage: ydjk/app/resource/listPage
  vp:
    address: http://100.65.20.70:6060/