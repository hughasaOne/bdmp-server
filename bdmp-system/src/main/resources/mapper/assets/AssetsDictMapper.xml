<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rhy.bdmp.system.modules.assets.dao.AssetsDictDao">

    <!--查询设备（分页）-->
    <select id="queryPage" resultType="com.rhy.bdmp.base.modules.assets.domain.po.Dict">
        <choose>
            <when test="null != parentCode and '' != parentCode">
                select * from (
                    select * from (
                    select a.id,
                    IF
                    ( find_in_set( pid, @pids ) > 0, @pids := concat( @pids, ',', id ), 0 ) as ischild
                    from
                    ( select dict_id as id, parent_id as pid from t_bdmp_assets_dict ) a,
                    ( select @pids := (select dict_id from t_bdmp_assets_dict zd where zd.code=#{parentCode})) vars
                    ) b
                    join t_bdmp_assets_dict t on b.id = t.dict_id
                    where
                    b.ischild != '0'
                ) d where 1=1
                <if test="null != dictName and '' != dictName">
                    and d.name like concat('%',#{dictName},'%')
                </if>
                order by sort asc, create_time desc
            </when>
            <otherwise>
                select * from t_bdmp_assets_dict where 1=1
                <if test="null != dictName and '' != dictName">
                    and name like concat('%',#{dictName},'%')
                </if>
                order by sort asc, create_time desc
            </otherwise>
        </choose>
    </select>

    <!--查询字典根据字典类型CODE-->
    <select id="queryByCode" resultType="com.rhy.bdmp.system.modules.assets.domain.vo.DictVO">
        SELECT
            *,
            if((select count(*) from t_bdmp_assets_dict where inner_parent_id = dict.dict_id) > 0,true,false) as hasChild
        FROM
            t_bdmp_assets_dict dict
        <where>
            <if test="null == useInnerParentId or false == useInnerParentId">
                and parent_id = ( SELECT dict_id FROM t_bdmp_assets_dict WHERE CODE = #{parentCode} )
            </if>
            <if test="null != useInnerParentId and useInnerParentId">
                and inner_parent_id = ( SELECT dict_id FROM t_bdmp_assets_dict WHERE CODE = #{parentCode} )
            </if>
            <if test="null != dictName and '' != dictName">
                and name like concat('%',#{dictName},'%')
            </if>
            and code != "32330700"
            ORDER BY
            sort ASC,
            create_time DESC
        </where>
    </select>

    <!--查找子节点-->
    <select id="findChild" resultType="com.rhy.bdmp.system.modules.assets.domain.vo.DictVO">
        select distinct
        dict_id, name, code, parent_id, if(level is null or level="",0,level) level , node_type, sort, datastatusid, create_by, create_time, update_by, update_time,
        IF (( select count( * ) FROM t_bdmp_assets_dict where parent_id = a.dict_id)> 0, 1, 0 ) AS hasChild
        from t_bdmp_assets_dict a
        where 1=1
        <choose>
            <when test='null != ew.sqlSegment and "" != ew.sqlSegment'>
                AND ${ew.sqlSegment}
            </when>
            <otherwise>
                <choose>
                    <when test="parentId != null and parentId != '' ">
                        and parent_id = #{parentId}
                    </when>
                    <otherwise>
                        <choose>
                            <when test="includeId != null and includeId != '' ">
                                and (parent_id = '' or parent_id is null)
                                or exists(
                                SELECT t.dict_id FROM (
                                SELECT
                                @r AS _id,
                                ( SELECT @r := parent_id FROM t_bdmp_assets_dict WHERE dict_id = _id limit 1) AS pid
                                FROM
                                t_bdmp_assets_dict h,
                                ( SELECT @r := #{includeId}) vars
                                ) a
                                JOIN t_bdmp_assets_dict t ON a._id = t.dict_id
                                where t.dict_id = a.dict_id
                                )
                            </when>
                            <otherwise>
                                and (parent_id = '' or parent_id is null)
                            </otherwise>
                        </choose>
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
        order by a.sort asc, a.create_time desc
    </select>

    <!--查找子节点-只找字典-->
    <select id="findChildDict" resultType="com.rhy.bdmp.system.modules.assets.domain.vo.DictVO">
        <choose>
            <when test="parentId != null and parentId != '' ">
                select
                dict_id, name, code, parent_id, if(level is null or level="",0,level) level , node_type, sort, datastatusid, create_by, create_time, update_by, update_time,
                IF ( ( SELECT count( * ) FROM t_bdmp_assets_dict WHERE parent_id = a.dict_id)> 0, 1, 0 ) AS hasChild
                from
                t_bdmp_assets_dict a
                where
                1=1
                <choose>
                    <when test='null != ew.sqlSegment and "" != ew.sqlSegment'>
                        and ${ew.sqlSegment} and a.node_type = '2'
                        and exists(
                        select t.dict_id from (
                        select a.id,
                        IF ( find_in_set( pid, @pids ) > 0, @pids := concat( @pids, ',', id ), 0 ) as ischild
                        from
                        ( select dict_id as id, parent_id as pid from t_bdmp_assets_dict ) a,
                        ( select @pids := #{parentId}) vars
                        ) b
                        join t_bdmp_assets_dict t on b.id = t.dict_id
                        where
                        b.ischild != '0'
                        and t.dict_id = a.dict_id
                        )
                    </when>
                    <otherwise>
                        and parent_id = #{parentId}
                    </otherwise>
                </choose>
                order by a.sort asc, a.create_time desc
            </when>
            <otherwise>
                select
                dict_id, name, code, parent_id, level , node_type, sort, datastatusid, create_by, create_time, update_by, update_time,
                IF ( ( SELECT count( * ) FROM t_bdmp_assets_dict WHERE parent_id = a.dict_id )> 0, 1, 0 ) AS hasChild
                from
                t_bdmp_assets_dict a
                where
                1=1
                <choose>
                    <when test='null != ew.sqlSegment and "" != ew.sqlSegment'>
                        and ${ew.sqlSegment} and a.node_type = '2'
                    </when>
                    <otherwise>
                        and exists(select dict_id from  t_bdmp_assets_dict b where (parent_id is null or parent_id = '') and a.parent_id=b.dict_id)
                    </otherwise>
                </choose>
                order by a.sort asc, a.create_time desc
            </otherwise>
        </choose>
    </select>

    <select id="detail" resultType="java.util.Map">
        select d1.dict_id as dictId,d1.name,d1.code,d1.parent_id as parentId,d1.level,d1.node_type as nodeType,d1.sort,
               (select name from t_bdmp_assets_dict where dict_id = d1.parent_id) as parentName,
               if((select count(*) from t_bdmp_assets_dict where parent_id = d1.dict_id) > 0,true,false) hasChild,
               d1.datastatusid
        from t_bdmp_assets_dict d1
        where d1.dict_id = #{dictId}
    </select>

    <select id="getDictAssets" resultType="java.util.Map">
        select dict_id as dictId,
        name,
        code,
        parent_id as parentId,
        inner_parent_id innerParentId,
        level,
        node_type as nodeType,
        (select name from t_bdmp_assets_dict where dict_id = d1.parent_id) as parentName,
        sort,
        case when #{dictBO.parentId} = '1390204180019871745'
        then if((select count(*) from t_bdmp_assets_dict_device where device_type_id = d1.dict_id) > 0,true,false)
        else if((select count(*) from t_bdmp_assets_dict where inner_parent_id = d1.dict_id) > 0,true,false)
        end
        as hasChild,
        date_format(update_time,'%Y-%m-%d %H:%i:%S') updateTime,
        d1.datastatusid
        from t_bdmp_assets_dict d1
        <where>
            <if test="dictBO.isDirectory">
                and (parent_id is null or parent_id = '')
            </if>
            <if test="null != dictBO.parentId and '' != dictBO.parentId">
                and parent_id = #{dictBO.parentId} and (inner_parent_id is null or inner_parent_id = '')
            </if>
            <if test="null != dictBO.innerParentId and '' != dictBO.innerParentId">
                and inner_parent_id = #{dictBO.innerParentId}
            </if>
            <if test="null != dictBO.name and '' != dictBO.name">
                and name like concat('%',#{dictBO.name},'%')
            </if>
            <if test="null != dictBO.code and '' != dictBO.code">
                and code like concat('%',#{dictBO.code},'%')
            </if>
            <if test="null != dictBO.id and '' != dictBO.id">
                or dict_id = #{dictBO.id}
            </if>
        </where>
        order by d1.sort,d1.create_time,d1.dict_id
    </select>

    <select id="getDeviceDictByDictId" resultType="java.util.Map">
        select device_dict_id as dictId,
        name,
        device_dict_id as code,
        #{dictBO.innerParentId} as parentId,
        '' as innerParentId,
        3 as level,
        '' as nodeType,
        (select name from t_bdmp_assets_dict where dict_id = #{dictBO.innerParentId}) as parentName,
        sort,
        false as hasChild,
        date_format(update_time,'%Y-%m-%d %H:%i:%S') updateTime,
        d1.datastatusid
        from t_bdmp_assets_dict_device d1
        <where>
            and device_type_id = #{dictBO.innerParentId}
        </where>
    </select>

</mapper>
