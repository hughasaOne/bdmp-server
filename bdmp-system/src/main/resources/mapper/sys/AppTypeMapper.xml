<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rhy.bdmp.system.modules.sys.dao.AppTypeDao">
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.rhy.bdmp.system.modules.sys.domain.vo.AppTypeVo">
        <id column="app_type_id" property="appTypeId" />
        <result column="app_type_name" property="appTypeName" />
        <result column="parent_id" property="parentId" />
        <result column="description" property="description" />
        <result column="sort" property="sort" />
        <result column="datastatusid" property="datastatusid" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!--查找应用类别的子类别（不包含当前节点）-->
    <select id="findAppTypeChildrenIds" resultType="java.lang.String">
        SELECT
            t.app_type_id
        FROM
            (
                SELECT
                    a.id,
                    IF
                        ( find_in_set( pid, @pids ) > 0, @pids := concat( @pids, ',', id ), 0 ) AS ischild
                FROM
                    ( SELECT app_type_id AS id, parent_id AS pid FROM t_bdmp_sys_app_type ) a,
                    ( SELECT @pids := #{appTypeId} ) vars
                    ) b
                        JOIN t_bdmp_sys_app_type t ON b.id = t.app_type_id
                WHERE
                        b.ischild != '0'
    </select>

    <!--获取应用类别及其父类别-->
    <select id="findAppTypesParent" resultMap="BaseResultMap">
        SELECT
            t.app_type_id,t.app_type_name,t.parent_id,t.description,t.sort,t.datastatusid,t.create_by,t.create_time,t.update_by,t.update_time
        FROM
            (
                SELECT
                    @r AS _id,
                    ( SELECT @r := parent_id FROM t_bdmp_sys_app_type WHERE app_type_id = _id limit 1) AS pid
                FROM
                    t_bdmp_sys_app_type h,
                    ( SELECT @r := #{appTypeId}) vars
                    ) a
                        JOIN t_bdmp_sys_app_type t ON a._id = t.app_type_id
    </select>

    <!--查询应用类型子节点（根据应用类型ID）-->
    <select id="findAppTypeChildren" resultType="com.rhy.bdmp.system.modules.sys.domain.vo.AppTypeVo">
        SELECT
        app_type_id,app_type_name,parent_id,description,sort,datastatusid,create_by,create_time,update_by,update_time,
        IF((select count(app_type_id) from t_bdmp_sys_app_type where parent_id=a.app_type_id )>0,0,1) as isLeaf
        FROM
        t_bdmp_sys_app_type a
        <where>
            <choose>
                <when test='null != ew.sqlSegment and "" != ew.sqlSegment'>
                    AND ${ew.sqlSegment}
                </when>
                <otherwise>
                    <choose>
                        <when test="parentId != null and parentId != '' ">
                            and parent_id = #{parentId}
                        </when>
                        <otherwise>
                            <choose>
                                <when test="includeId != null and includeId != '' ">
                                    and (parent_id = '' or parent_id is null)
                                    or exists(
                                    SELECT t.app_type_id FROM (
                                    SELECT
                                    @r AS _id,
                                    ( SELECT @r := parent_id FROM t_bdmp_sys_app_type WHERE app_type_id = _id limit 1) AS pid
                                    FROM
                                    t_bdmp_sys_app_type h,
                                    ( SELECT @r := #{includeId}) vars
                                    ) a
                                    JOIN t_bdmp_sys_app_type t ON a._id = t.app_type_id
                                    where t.app_type_id = a.app_type_id
                                    )
                                </when>
                                <otherwise>
                                    and (parent_id = '' or parent_id is null)
                                </otherwise>
                            </choose>
                        </otherwise>
                    </choose>
                </otherwise>
            </choose>
            order by a.sort asc, a.create_time desc
        </where>
    </select>

</mapper>